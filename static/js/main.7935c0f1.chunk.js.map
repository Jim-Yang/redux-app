{"version":3,"sources":["types/index.ts","redux/middleware/index.ts","redux/store/index.ts","redux/reducers/index.ts","components/List.tsx","redux/actions/TodoActions.ts","redux/actions/GoalActions.ts","redux/actions/DataActions.ts","containers/Todos.tsx","containers/Goals.tsx","utils/index.ts","api.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["TODO_ACTIONS","GOAL_ACTIONS","DATA_ACTIONS","store","createStore","combineReducers","todos","arguments","length","undefined","action","actionTodo","todo","type","ADD_TODO","concat","REMOVE_TODO","filter","id","TOGGLE_TODO","map","Object","assign","complete","RECIEVE_DATA","goals","actionGoal","goal","ADD_GOAL","REMOVE_GOAL","loading","composeWithDevTools","applyMiddleware","next","name","alert","ReduxThunk","console","group","log","JSON","stringify","result","getState","groupEnd","List","_this","this","react_default","a","createElement","props","items","item","key","onClick","toggle","style","textDecoration","remove","React","Component","TodoActions","api","dispatch","removeTodoAction","deleteTodo","catch","addTodoAction","_this2","toggleTodoAction","saveTodoToggle","then","callback","_this3","saveTodo","GoalActions","saveGoal","addGoalAction","removeGoalAction","deleteGoal","DataActions","Promise","all","fetchGoals","fetchTodos","_ref","_ref2","slicedToArray","receiveDataAction","Todos","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","addItem","event","preventDefault","value","handleSaveTodo","removeItem","handleDeleteTodo","toggleItem","handleToggleTodo","placeholder","ref","List_List","Goals","handleAddGoal","handleRemoveGoal","generateId","min","max","Math","floor","random","API","res","rej","setTimeout","fail","_this4","_this5","_this6","_this7","App","subscribe","forceUpdate","handleReceiveData","_store$getState","className","Todos_Todos","Goals_Goals","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6JAsCYA,EAOAC,EAMAC,+FAbAF,oIAOAC,wGAMAC,6CC/CL,oBCEMC,EAAQC,sBAAYC,0BAAgB,CAACC,MCH3C,WAA+D,IAAhDA,EAAgDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhC,GAAIG,EAA4BH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5DE,EAAaD,EAAOE,KAC1B,OAAOF,EAAOG,MACV,KAAKb,EAAac,SACd,OAAOH,EAAaL,EAAMS,OAAOJ,GAAcL,EACnD,KAAKN,EAAagB,YACd,OAAOL,EAAaL,EAAMW,OAAQ,SAAAL,GAAI,OAAKA,EAAKM,KAAOP,EAAWO,KAAOZ,EAC7E,KAAKN,EAAamB,YACd,OAAIR,EAGGL,EAAMc,IAAI,SAAAR,GACb,OAAGA,EAAKM,KAAOP,EAAWO,GACfG,OAAOC,OAAO,GAAIV,EAAM,CAAEW,UAAWX,EAAKW,WAE9CX,IANAN,EAQf,KAAKN,EAAawB,aAEV,OADoBd,EAAOJ,OACLA,EAC9B,QACI,OAAOA,IDlBsCmB,MCuBlD,WAA8D,IAA/CA,EAA+ClB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,GAAIG,EAA2BH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3DiB,EAAahB,EAAOiB,KAC1B,OAAOjB,EAAOG,MACV,KAAKZ,EAAa2B,SACd,OAAOF,EAAaD,EAAMV,OAAOW,GAAcD,EACnD,KAAKxB,EAAa4B,YACd,OAAOH,EAAaD,EAAMR,OAAO,SAAAU,GAAI,OAAKA,EAAKT,KAAOQ,EAAWR,KAAOO,EAC5E,KAAKxB,EAAauB,aAEd,OADoBd,EAAOe,OACLA,EAC1B,QACI,OAAOA,IDlC6CK,QCuCzD,WAAmE,IAAlDA,IAAkDvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACtE,QADsEA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACxDI,MAEV,KAAKb,EAAawB,aACd,OAAO,EACX,QACI,OAAOM,MD7CwDC,8BAAoBC,0BDF5D,SAAC7B,GAAD,OAAW,SAAC8B,GAAD,OAAU,SAACvB,GACrD,GAAGA,EAAOG,OAASb,EAAac,WACzBJ,EAAOE,MACkB,YAArBF,EAAOE,KAAKsB,KAMvB,OAAOD,EAAKvB,GALAyB,MAAM,mBCFkGC,IDUtF,SAACjC,GAAD,OAAW,SAAC8B,GAAD,OAAU,SAACvB,GACpD2B,QAAQC,MAAM5B,EAAOG,MACrBwB,QAAQE,IAAR,uBAAAxB,OAAmCyB,KAAKC,UAAU/B,KAClD,IAAMgC,EAAST,EAAKvB,GAIpB,OAHA2B,QAAQE,IAAR,kBAAAxB,OAA8ByB,KAAKC,UAAUC,KAC7CL,QAAQE,IAAR,eAAAxB,OAA2ByB,KAAKC,UAAUtC,EAAMwC,cAChDN,QAAQO,WACDF,QGdUG,mLACR,IAAAC,EAAAC,KACL,OACAC,EAAAC,EAAAC,cAAA,UACKH,KAAKI,MAAMC,MAAMhC,IAAI,SAAAiC,GAClB,OACAL,EAAAC,EAAAC,cAAA,MAAII,IAAKD,EAAKnC,IACV8B,EAAAC,EAAAC,cAAA,QACIK,QAAS,WACFT,EAAKK,MAAMK,QACVV,EAAKK,MAAMK,OAAOH,IAG1BI,MACI,CAACC,eAAgBL,EAAK9B,SAAW,eAAgB,KAEnD8B,EAAKnB,MAEXc,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMT,EAAKK,MAAMQ,OAAON,KAAzC,gBAlBcO,IAAMC,WCLnBC,6GACYlD,GACzB,MAAO,CACHC,KAAMb,EAAac,SACnBF,iDAIwBA,GAC5B,MAAO,CACHC,KAAMb,EAAamB,YACnBP,iDAIwBA,GAC5B,MAAO,CACHC,KAAMb,EAAagB,YACnBJ,iDAIgBA,EAAYmD,GAAU,IAAAjB,EAAAC,KAC1C,OAAO,SAAEiB,GAGL,OADAA,EAASlB,EAAKmB,iBAAiBrD,IACxBmD,EAAIG,WAAWtD,EAAKM,IAAIiD,MAAO,WAElCH,EAASlB,EAAKsB,cAAcxD,IAC5BuB,MAAM,6EAKMvB,EAAYmD,GAAU,IAAAM,EAAAtB,KAC1C,OAAO,SAACiB,GAEAA,EAASK,EAAKC,iBAAiB1D,IAE/BmD,EAAIQ,eAAe3D,EAAKM,IAAIsD,OAAOL,MAAM,WACzCH,EAASK,EAAKC,iBAAiB1D,IAC/BuB,MAAM,mEAKID,EAAc6B,EAAUU,GAAoB,IAAAC,EAAA3B,KAC9D,OAAO,SAACiB,GAEJD,EAAIY,SAASzC,GAAMsC,KAAM,SAAA5D,GACrB6D,IACAT,EAASU,EAAKN,cAAcxD,MAC7BuD,MAAM,WACLhC,MAAM,6CCrDDyC,6GACYjD,GACzB,MAAO,CACHd,KAAMZ,EAAa2B,SACnBD,iDAIwBA,GAC5B,MAAO,CACHd,KAAMZ,EAAa4B,YACnBF,8CAIaO,EAAc6B,EAAUU,GAAmB,IAAA3B,EAAAC,KAC5D,OAAO,SAACiB,GACJD,EAAIc,SAAS3C,GAAMsC,KAAK,SAAA7C,GACpB8C,IACAT,EAASlB,EAAKgC,cAAcnD,MAC7BwC,MAAM,WACLhC,MAAM,2EAKMR,EAAYoC,GAAU,IAAAM,EAAAtB,KAC1C,OAAO,SAACiB,GACJA,EAASK,EAAKU,iBAAiBpD,IAC/BoC,EAAIiB,WAAWrD,EAAKT,IAAIiD,MAAM,WAC1BhC,MAAM,iCACN6B,EAASK,EAAKS,cAAcnD,wBC/BvBsD,iHAEgBxD,EAAenB,GAC5C,MAAO,CACHO,KAAMX,EAAasB,aACnBlB,QACAmB,mDAIiBsC,GAAU,IAAAjB,EAAAC,KAC/B,OAAO,SAACiB,GACJkB,QAAQC,IAAI,CAACpB,EAAIqB,aAAcrB,EAAIsB,eAAeb,KAAK,SAAAc,GAAoB,IAAAC,EAAAlE,OAAAmE,EAAA,EAAAnE,CAAAiE,EAAA,GAAlB7D,EAAkB8D,EAAA,GAAXjF,EAAWiF,EAAA,GACvEvB,EAASlB,EAAK2C,kBAAkBhE,EAAOnB,MACxC6D,kBCLMuB,cAIjB,SAAAA,EAAYvC,GAAkB,IAAAL,EAAA,OAAAzB,OAAAsE,EAAA,EAAAtE,CAAA0B,KAAA2C,IAC1B5C,EAAAzB,OAAAuE,EAAA,EAAAvE,CAAA0B,KAAA1B,OAAAwE,EAAA,EAAAxE,CAAAqE,GAAAI,KAAA/C,KAAMI,KAHV4C,WAE8B,EAAAjD,EAK9BkD,QAAU,SAACC,GACPA,EAAMC,iBACN,IAAMhE,EAAOY,EAAKiD,MAAMI,MACZ,KAATjE,GAIHY,EAAKK,MAAMhD,MAAM6D,SAASF,EAAYsC,eAAelE,EAAMY,EAAKK,MAAMY,IAAK,WAAOjB,EAAKiD,MAAMI,MAAQ,OAZ3ErD,EAe9BuD,WAAa,SAAChD,GAEVP,EAAKK,MAAMhD,MAAM6D,SAASF,EAAYwC,iBAAiBjD,EAAMP,EAAKK,MAAMY,OAjB9CjB,EAoB9ByD,WAAa,SAAClD,GAEVP,EAAKK,MAAMhD,MAAM6D,SAASF,EAAY0C,iBAAiBnD,EAAMP,EAAKK,MAAMY,OApBxEjB,EAAKiD,MAAQ,GAFajD,wEAyBrB,IAAAuB,EAAAtB,KACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIrC,KAAK,OACL4F,YAAY,WACZC,IAAK,SAACX,GAAD,OAAW1B,EAAK0B,MAAQA,KAEjC/C,EAAAC,EAAAC,cAAA,UAAQK,QAASR,KAAKiD,SAAtB,YAEAhD,EAAAC,EAAAC,cAACyD,EAAD,CACIvD,MAAOL,KAAKI,MAAM7C,MAClBqD,OAAQZ,KAAKsD,WACb7C,OAAQT,KAAKwD,qBA3CE3C,IAAMC,WCApB+C,cAIjB,SAAAA,EAAYzD,GAAmB,IAAAL,EAAA,OAAAzB,OAAAsE,EAAA,EAAAtE,CAAA0B,KAAA6D,IAC3B9D,EAAAzB,OAAAuE,EAAA,EAAAvE,CAAA0B,KAAA1B,OAAAwE,EAAA,EAAAxE,CAAAuF,GAAAd,KAAA/C,KAAMI,KAHV4C,WAE+B,EAAAjD,EAK/BkD,QAAU,SAACC,GACPA,EAAMC,iBACN,IAAMhE,EAAOY,EAAKiD,MAAMI,MACZ,KAATjE,GAIHY,EAAKK,MAAMhD,MAAM6D,SAASY,EAAYiC,cAAc3E,EAAMY,EAAKK,MAAMY,IAAK,WAAQjB,EAAKiD,MAAMI,MAAQ,OAZ1ErD,EAe/BuD,WAAa,SAAChD,GAEVP,EAAKK,MAAMhD,MAAM6D,SAASY,EAAYkC,iBAAiBzD,EAAMP,EAAKK,MAAMY,OAfxEjB,EAAKiD,MAAQ,GAFcjD,wEAoBtB,IAAAuB,EAAAtB,KACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACIrC,KAAK,OACL4F,YAAY,WACZC,IAAK,SAACX,GAAD,OAAW1B,EAAK0B,MAAQA,KAEjC/C,EAAAC,EAAAC,cAAA,UAAQK,QAASR,KAAKiD,SAAtB,YACAhD,EAAAC,EAAAC,cAACyD,EAAD,CACIvD,MAAOL,KAAKI,MAAM1B,MAClBkC,OAAQZ,KAAKsD,qBApCEzC,IAAMC,WCblC,SAASkD,IAChB,IAD2BC,EAC3BzG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,EAAE0G,EACjC1G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqC,IAEjC,OAAO2G,KAAKC,MAAMD,KAAKE,UAAUH,EAAID,EAAI,GAAGA,OCC3BK,mDAMZ5F,MAAgB,CACrB,CACEP,GAAI6F,IACJ7E,KAAM,eAER,CACEhB,GAAI6F,IACJ7E,KAAM,iCAGF5B,MAAgB,CACtB,CACEY,GAAI6F,IACJ7E,KAAM,eACNX,UAAU,GAEZ,CACEL,GAAI6F,IACJ7E,KAAM,eACNX,UAAU,GAEZ,CACEL,GAAI6F,IACJ7E,KAAM,gBACNX,UAAU,uDA3BZ,OAA2C,IAApC2F,KAAKC,MAAM,EAAAD,KAAKE,+CA+BK,IAAAtE,EAAAC,KAC5B,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACTF,EAAIxE,EAAKrB,QACR,4CAIuB,IAAA4C,EAAAtB,KAC5B,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACTF,EAAIjD,EAAK/D,QACR,wCAIE4B,GAA6B,IAAAwC,EAAA3B,KACpC,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACT,IAAM5G,EAAO,CACXM,GAAI6F,IACJ7E,KAAMA,EACNX,UAAU,GAEZmD,EAAKpE,MAAQoE,EAAKpE,MAAMS,OAAO,CAACH,IAChC8D,EAAK+C,OAASF,EAAI3G,GAAQ0G,EAAI1G,IAC7B,wCAIEsB,GAA6B,IAAAwF,EAAA3E,KACpC,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACT,IAAM7F,EAAO,CACXT,GAAI6F,IACJ7E,KAAMA,GAERwF,EAAKjG,MAAQiG,EAAKjG,MAAMV,OAAO,CAACY,IAChC+F,EAAKD,OAASF,EAAI5F,GAAQ2F,EAAI3F,IAC7B,0CAIIT,GAA6B,IAAAyG,EAAA5E,KACtC,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACTG,EAAKlG,MAAQkG,EAAKlG,MAAMR,OAAO,SAACU,GAAD,OAAUA,EAAKT,KAAOA,IACrDyG,EAAKF,OAASF,IAAOD,EAAIK,EAAKlG,QAC7B,0CAIIP,GAA6B,IAAA0G,EAAA7E,KACtC,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACTI,EAAKtH,MAAQsH,EAAKtH,MAAMW,OAAO,SAACL,GAAD,OAAUA,EAAKM,KAAOA,IACrD0G,EAAKH,OAASF,IAAOD,EAAIM,EAAKtH,QAC7B,8CAIQY,GAA6B,IAAA2G,EAAA9E,KAC1C,OAAO,IAAImC,QAAQ,SAACoC,EAAKC,GACvBC,WAAW,WACTK,EAAKvH,MAAQuH,EAAKvH,MAAMc,IAAI,SAACR,GAAD,OAAUA,EAAKM,KAAOA,EAAKN,EACrDS,OAAOC,OAAO,GAAIV,EAAM,CAACW,UAAWX,EAAKW,aAG3CsG,EAAKJ,OAASF,IAAOD,EAAIO,EAAKvH,QAC7B,gBCpGYwH,cAGnB,SAAAA,IAAa,IAAAhF,EAAA,OAAAzB,OAAAsE,EAAA,EAAAtE,CAAA0B,KAAA+E,IACXhF,EAAAzB,OAAAuE,EAAA,EAAAvE,CAAA0B,KAAA1B,OAAAwE,EAAA,EAAAxE,CAAAyG,GAAAhC,KAAA/C,KAAM,MAHRgB,SAEa,EAEXjB,EAAKiB,IAAM,IAAIsD,EAFJvE,mFAKM,IAAAuB,EAAAtB,KACjB5C,EAAM4H,UAAW,kBAAM1D,EAAK2D,gBAE5B7H,EAAM6D,SAASiB,EAAYgD,kBAAkBlF,KAAKgB,uCAG5C,IAAAmE,EAE4B/H,EAAMwC,WAAhCrC,EAFF4H,EAEE5H,MAAOmB,EAFTyG,EAESzG,MAEf,OAJMyG,EAEgBpG,QAGZkB,EAAAC,EAAAC,cAAA,qBAIRF,EAAAC,EAAAC,cAAA,OAAKiF,UAAU,OAEbnF,EAAAC,EAAAC,cAACkF,EAAD,CAAOjI,MAAOA,EAAOG,MAAOA,EAAOyD,IAAKhB,KAAKgB,MAC7Cf,EAAAC,EAAAC,cAACmF,EAAD,CAAOlI,MAAOA,EAAOsB,MAAOA,EAAOsC,IAAKhB,KAAKgB,cA1BpBH,IAAMC,WCMnByE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.7935c0f1.chunk.js","sourcesContent":["export type Action = TodoAction | GoalAction\n\nexport type TodoAction = {\n    type: TODO_ACTIONS,\n    todo?: Todo\n    todos?: Todo[]\n}\n\nexport type GoalAction = {\n    type: GOAL_ACTIONS,\n    goal?: Goal,\n    goals?: Goal[]\n}\n\nexport type DataAction = {\n    type: DATA_ACTIONS,\n    goals?: Goal[],\n    todos?: Todo[]\n}\n\nexport type Todo = {\n    id: number,\n    name: string,\n    complete: boolean\n}\n\nexport type State = {\n    data: ApiData\n    loading: boolean\n}\n\nexport type ApiData = {\n    goals: Goal[],\n    todos: Todo[]\n}\n\nexport type ACTIONS = TODO_ACTIONS | GOAL_ACTIONS | DATA_ACTIONS\n\nexport enum TODO_ACTIONS {\n    ADD_TODO = \"ADD_TODO\",\n    REMOVE_TODO = \"REMOVE_TODO\",\n    TOGGLE_TODO = \"TOGGLE_TODO\",\n    RECIEVE_DATA = \"RECIEVE_DATA\"\n}\n\nexport enum GOAL_ACTIONS {\n    ADD_GOAL = \"ADD_GOAL\",\n    REMOVE_GOAL = \"REMOVE_GOAL\",\n    RECIEVE_DATA = \"RECIEVE_DATA\"\n}\n\nexport enum DATA_ACTIONS {\n    RECIEVE_DATA = \"RECIEVE_DATA\"\n}\n\nexport type Goal = {\n    id: number,\n    name: string\n    complete?: boolean\n}","import { Action, TODO_ACTIONS } from \"../../types\";\nimport { Middleware } from \"redux\";\n\n// Middleware\nexport const checker: Middleware = (store) => (next) => (action: Action) => {\n    if(action.type === TODO_ACTIONS.ADD_TODO){\n        if(action.todo) {\n            if(action.todo.name === \"bitcoin\"){\n                alert(\"Unacceptable\")\n                return\n            }\n        }\n    }\n    return next(action)\n}\n\nexport const logger: Middleware = (store) => (next) => (action: Action) => {\n    console.group(action.type)\n    console.log(`The current action: ${JSON.stringify(action)}`)\n    const result = next(action)\n    console.log(`The new state: ${JSON.stringify(result)}`)\n    console.log(`Total state ${JSON.stringify(store.getState())}`)\n    console.groupEnd()\n    return result\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { todos, goals, loading } from '../reducers'\nimport { checker, logger } from '../middleware'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReduxThunk  from 'redux-thunk'\n\nexport const store = createStore(combineReducers({todos, goals, loading}), composeWithDevTools(applyMiddleware(checker, ReduxThunk, logger)))","import { Todo, Action, Goal, TodoAction, TODO_ACTIONS, GoalAction, GOAL_ACTIONS } from '../../types'\n\n// Reducer for todos\nexport function todos(todos: Todo[] = [], action: TodoAction): Todo[] {\n    const actionTodo = action.todo\n    switch(action.type) {\n        case TODO_ACTIONS.ADD_TODO:\n            return actionTodo ? todos.concat(actionTodo) : todos // Return new object with todo\n        case TODO_ACTIONS.REMOVE_TODO:\n            return actionTodo ? todos.filter( todo => (todo.id !== actionTodo.id)) : todos\n        case TODO_ACTIONS.TOGGLE_TODO:\n            if(!actionTodo) {\n                return todos\n             }\n            return todos.map(todo => {\n                if(todo.id === actionTodo.id){\n                    return Object.assign({}, todo, { complete: !todo.complete })\n                }\n                return todo\n            })\n        case TODO_ACTIONS.RECIEVE_DATA:\n                const actionTodos = action.todos\n                return actionTodos || todos\n        default:\n            return todos\n    }\n}\n\n// Reducer for goals\nexport function goals(goals: Goal[] = [], action: GoalAction): Goal[]{\n    const actionGoal = action.goal\n    switch(action.type){\n        case GOAL_ACTIONS.ADD_GOAL:\n            return actionGoal ? goals.concat(actionGoal) : goals\n        case GOAL_ACTIONS.REMOVE_GOAL:\n            return actionGoal ? goals.filter(goal => (goal.id !== actionGoal.id)) : goals\n        case GOAL_ACTIONS.RECIEVE_DATA:\n            const actionGoals = action.goals\n            return actionGoals || goals\n        default:\n            return goals\n    }\n}\n\n// Reducer for loading\nexport function loading(loading: boolean = true, action: Action): boolean {\n    switch(action.type){\n        // Reminder that this action is dispatched when items are done loading\n        case TODO_ACTIONS.RECIEVE_DATA:\n            return false\n        default:\n            return loading\n    }\n}","import React from 'react'\nimport { Todo, Goal } from '../types';\n\ntype ListProps = {\n    items: Array<Todo | Goal>\n    remove: (item: any) => void\n    toggle?: (item: any) => void\n}\n\nexport default class List extends React.Component<ListProps> {\n    render() {\n        return (\n        <ul>\n            {this.props.items.map(item => {\n                return (\n                <li key={item.id}>\n                    <span \n                        onClick={() => {\n                            if(this.props.toggle) {\n                                this.props.toggle(item)\n                            }\n                        }}\n                        style={\n                            {textDecoration: item.complete ? 'line-through': ''}}  \n                    >\n                        { item.name }\n                    </span>\n                    <button onClick={() => this.props.remove(item)}>X</button>\n                </li>\n                )\n            })}\n        </ul>)\n    }\n}","import { Action, Todo, TODO_ACTIONS } from '../../types'\nimport { Dispatch } from 'redux';\nimport API from '../../api';\n\nexport default class TodoActions {\n    private static addTodoAction(todo: Todo): Action {\n        return {\n            type: TODO_ACTIONS.ADD_TODO, \n            todo\n        }\n    }\n    \n    private static toggleTodoAction(todo: Todo): Action {\n        return {\n            type: TODO_ACTIONS.TOGGLE_TODO,\n            todo\n        }\n    }\n    \n    private static removeTodoAction(todo: Todo): Action {\n        return {\n            type: TODO_ACTIONS.REMOVE_TODO,\n            todo\n        }\n    }\n\n    static handleDeleteTodo(todo: Todo, api: API) {\n        return ( dispatch: Dispatch ) => {\n            // Optimistically remove the item from UI\n            dispatch(this.removeTodoAction(todo))\n            return api.deleteTodo(todo.id).catch( () => {\n                // If it fails, add it back\n                dispatch(this.addTodoAction(todo))\n                alert(\"Delete todo failed, try again\")\n            })\n        }\n    }\n    \n    static handleToggleTodo(todo: Todo, api: API) {\n        return (dispatch: Dispatch) => {\n                // Optimistically toggle todo\n                dispatch(this.toggleTodoAction(todo))\n                // Toggle on API\n                api.saveTodoToggle(todo.id).then().catch(() => {\n                dispatch(this.toggleTodoAction(todo))\n                alert(\"Toggle went wrong :( \")\n            })\n        }\n    }\n    \n    static handleSaveTodo(name: string, api: API, callback: Function) {\n        return (dispatch: Dispatch ) => {\n            // Save to API\n            api.saveTodo(name).then( todo => {\n                callback()\n                dispatch(this.addTodoAction(todo))\n            }).catch(() => {\n                alert(\"Adding todo failed, try again\")\n            })\n        }\n    }\n}","import { Goal, GOAL_ACTIONS, GoalAction } from \"../../types\";\nimport API from \"../../api\";\nimport { Dispatch } from \"redux\";\n\nexport default class GoalActions {\n    private static addGoalAction(goal: Goal): GoalAction {\n        return {\n            type: GOAL_ACTIONS.ADD_GOAL,\n            goal\n        }\n    }\n    \n    private static removeGoalAction(goal: Goal): GoalAction {\n        return {\n            type: GOAL_ACTIONS.REMOVE_GOAL,\n            goal\n        }\n    }\n\n    static handleAddGoal(name: string, api: API, callback: Function){ \n        return (dispatch: Dispatch) => {\n            api.saveGoal(name).then(goal => {\n                callback()\n                dispatch(this.addGoalAction(goal))\n            }).catch(() => {\n                alert(\"Save goal failed, try again\")\n            })\n        }\n    }\n\n    static handleRemoveGoal(goal: Goal, api: API) {\n        return (dispatch: Dispatch) => {\n            dispatch(this.removeGoalAction(goal))\n            api.deleteGoal(goal.id).catch(() => {\n                alert(\"Remove goal failed, try again\")\n                dispatch(this.addGoalAction(goal))\n            })\n        }\n    }\n}","import { Goal, Todo, DATA_ACTIONS, DataAction } from \"../../types\";\nimport API from \"../../api\";\nimport { Dispatch } from \"redux\";\n\nexport default class DataActions {\n    \n    private static receiveDataAction(goals: Goal[], todos: Todo[]): DataAction {\n        return {\n            type: DATA_ACTIONS.RECIEVE_DATA,\n            todos,\n            goals\n        }\n    }\n\n    static handleReceiveData(api: API) {\n        return (dispatch: Dispatch) => {\n            Promise.all([api.fetchGoals(), api.fetchTodos()]).then(([goals, todos]) => {\n                dispatch(this.receiveDataAction(goals, todos))\n            }).catch()\n        }\n    }\n}","import React from 'react'\nimport List from '../components/List';\nimport { Store } from 'redux';\nimport { TodoActions } from '../redux/actions'\nimport { Todo } from '../types';\nimport API from '../api';\n\ntype TodosProp = {\n    api: API\n    store: Store\n    todos: Todo[]\n}\n\nexport default class Todos extends React.Component<TodosProp> {\n\n    input: HTMLInputElement\n\n    constructor(props: TodosProp) {\n        super(props)\n        this.input = {} as HTMLInputElement\n    }\n\n    addItem = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\n        event.preventDefault()\n        const name = this.input.value\n        if(name === ''){\n            return\n        }\n        // @ts-ignore\n        this.props.store.dispatch(TodoActions.handleSaveTodo(name, this.props.api, () => {this.input.value = ''}))\n    }\n\n    removeItem = (item: Todo) => {\n        // @ts-ignore\n        this.props.store.dispatch(TodoActions.handleDeleteTodo(item, this.props.api))\n    }\n\n    toggleItem = (item: Todo) => {\n        // @ts-ignore\n        this.props.store.dispatch(TodoActions.handleToggleTodo(item, this.props.api))\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Todo List</h1>\n                <input\n                    type='text'\n                    placeholder='Add Todo'\n                    ref={(input) => this.input = input!}\n                />\n                <button onClick={this.addItem}>Add Todo</button>\n\n                <List\n                    items={this.props.todos}\n                    remove={this.removeItem}\n                    toggle={this.toggleItem}\n                />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport List from \"../components/List\";\nimport { Store } from \"redux\";\nimport { Goal } from \"../types\";\nimport { GoalActions } from './../redux/actions/'\nimport API from \"../api\";\n\ntype GoalsProps = {\n    api: API\n    store: Store\n    goals: Goal[]\n}\n\nexport default class Goals extends React.Component<GoalsProps> {\n\n    input: HTMLInputElement\n\n    constructor(props: GoalsProps) {\n        super(props)\n        this.input = {} as HTMLInputElement\n    }\n\n    addItem = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\n        event.preventDefault()\n        const name = this.input.value\n        if(name === ''){\n            return\n        }\n        // @ts-ignore\n        this.props.store.dispatch(GoalActions.handleAddGoal(name, this.props.api, () => { this.input.value = '' }))\n    }\n\n    removeItem = (item: Goal) => {\n        // @ts-ignore\n        this.props.store.dispatch(GoalActions.handleRemoveGoal(item, this.props.api))\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Goals List</h1>\n                <input\n                    type='text'\n                    placeholder='Add Todo'\n                    ref={(input) => this.input = input!}\n                />\n                <button onClick={this.addItem}>Add Todo</button>\n                <List\n                    items={this.props.goals}\n                    remove={this.removeItem}\n                    />\n            </div>\n        )\n    }\n}","export function generateId(min=0,max=100000) // min and max included\n{\n    return Math.floor(Math.random()*(max-min+1)+min);\n}","import { Goal, Todo} from './types'\nimport { generateId } from './utils'\n\nexport default class API {\n\n fail () {\n    return Math.floor(Math.random()*(5-1)) === 3\n  }\n\n  public goals: Goal[] = [\n    {\n      id: generateId(),\n      name: 'Learn Redux',\n    },\n    {\n      id: generateId(),\n      name: 'Read 50 books this year',\n    },\n  ];\n   public todos: Todo[] = [\n    {\n      id: generateId(),\n      name: 'Walk the dog',\n      complete: false,\n    },\n    {\n      id: generateId(),\n      name: 'Wash the car',\n      complete: false,\n    },\n    {\n      id: generateId(),\n      name: 'Go to the gym',\n      complete: true,\n    }\n  ];\n\n  fetchGoals(): Promise<Goal[]> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res(this.goals)\n      }, 2000)\n    })\n  }\n\n  fetchTodos(): Promise<Todo[]> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res(this.todos)\n      }, 2000)\n    })\n  }\n\n  saveTodo(name: string): Promise<Todo> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        const todo = {\n          id: generateId(),\n          name: name,\n          complete: false,\n        }\n        this.todos = this.todos.concat([todo]);\n        this.fail() ? rej(todo) : res(todo);\n      }, 300)\n    })\n  }\n\n  saveGoal(name: string): Promise<Goal> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        const goal = {\n          id: generateId(),\n          name: name,\n        }\n        this.goals = this.goals.concat([goal]);\n        this.fail() ? rej(goal) : res(goal);\n      }, 300)\n    })\n  }\n\n  deleteGoal(id: number): Promise<Goal[]> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        this.goals = this.goals.filter((goal) => goal.id !== id);\n        this.fail() ? rej(): res(this.goals);\n      }, 300)\n    });\n  }\n\n  deleteTodo(id: number): Promise<Todo[]> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        this.todos = this.todos.filter((todo) => todo.id !== id);\n        this.fail() ? rej(): res(this.todos);\n      }, 300)\n    });\n  }\n\n  saveTodoToggle(id: number): Promise<Todo[]> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        this.todos = this.todos.map((todo) => todo.id !== id ? todo :\n          Object.assign({}, todo, {complete: !todo.complete})\n        );\n\n        this.fail() ? rej(): res(this.todos);\n      }, 300)\n    });\n  }\n}","import React from 'react';\nimport { store } from './redux/store'\nimport { Todos, Goals } from './containers'\nimport { DataActions } from './redux/actions'\nimport API from './api';\n\nexport default class App extends React.Component {\n  api: API;\n\n  constructor(){\n    super({})\n    this.api = new API()\n  }\n\n  componentDidMount(){\n    store.subscribe( () => this.forceUpdate())\n    //@ts-ignore\n    store.dispatch(DataActions.handleReceiveData(this.api))\n  }\n\n  render(){\n\n    const { todos, goals, loading } = store.getState()\n\n    if(loading) {\n      return (<h1>Loading</h1>)\n    }\n\n    return (\n      <div className=\"App\">\n  \n        <Todos store={store} todos={todos} api={this.api}/>\n        <Goals store={store} goals={goals} api={this.api}/>\n      </div>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}